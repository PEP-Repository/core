.update-published-branch-base:
  stage: publish
  allow_failure: true
  rules:
    # Only on development branch
    - if: '$CI_COMMIT_REF_NAME == $PEP_FOSS_DEVELOPMENT_BRANCH'
      when: always
    - when: never
  tags:
    - docker-small
  image: alpine:latest

push-published-branch-to-github:
  extends: .update-published-branch-base
  before_script:
    - apk update -qq && apk add --no-cache git
    - git remote remove gitlab &>dev/null || true
    - git remote add gitlab "https://gitlab-ci-token:${PEP_GROUP_REPOSITORY_TOKEN}@gitlab.pep.cs.ru.nl/pep/core.git"
    - git remote remove github &>/dev/null || true
    - git remote add github "https://pep-team:${GITHUB_ACCESS_TOKEN}@github.com/PEP-Repository/core.git"

  script:
    - set -eu
    # Fetch the target branch at the start so that the final `git push --force-with-lease` fails if it changed
    - git fetch github "${PEP_FOSS_PUBLISHED_BRANCH}" &>/dev/null
    # Make sure the local version of the published branch is up to date
    - |
      git branch -D "${PEP_FOSS_PUBLISHED_BRANCH}" 2>/dev/null || true
      git fetch gitlab "${PEP_FOSS_PUBLISHED_BRANCH}" &>/dev/null
      git checkout -b "${PEP_FOSS_PUBLISHED_BRANCH}" "gitlab/${PEP_FOSS_PUBLISHED_BRANCH}"

    - |
      readonly NR_OF_ROOT_COMMITS="$(git rev-list --max-parents=0 HEAD | wc -l)"
      readonly TIMESTAMP_OF_EARLIEST_COMMIT="$(git log --reverse --format=%at -n 1 HEAD)"
      readonly EARLIEST_ALLOWED_TIMESTAMP="$(date -d "2025-01-01" +%s)"
    - |
      if [ "${TIMESTAMP_OF_EARLIEST_COMMIT}" -lt "${EARLIEST_ALLOWED_TIMESTAMP}" ]; then
        >&2 echo "Error: The current branch contains commits that were created before we went open source. Aborting"
        exit 1
      fi
    - |
      if [ "${NR_OF_ROOT_COMMITS}" -ne 1 ]; then
        >&2 echo "Error: The current branch has more than one root commit. Aborting"
        exit 1
      fi
    - git push --force-with-lease github

