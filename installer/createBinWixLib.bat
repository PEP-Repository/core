@echo off
set OwnDir=%~dp0

set builddir=%1
set flavor=%2
set windeployqt=%3

if "%flavor%" == "" (
	echo Usage: %0 ^<binBuildDir^> ^<flavor^> [WinDeployQt-exe-path]
	echo E.g. : %0 "C:\proj\bin\pep" Debug
	exit /B 1
)

if NOT EXIST %builddir% (
	echo Build directory not found at %builddir%
	exit /B 1
)

set cppbuilddir=%builddir%\cpp\pep
if NOT EXIST %cppbuilddir% (
	echo Build base directory not found at %cppbuilddir%
	exit /B 1
)

set assessorbuilddir="%cppbuilddir%\assessor\%flavor%"
if NOT EXIST %assessorbuilddir% (
	echo Assessor build directory not found at %assessorbuilddir%
	exit /B 1
)

set elevatebuilddir="%cppbuilddir%\elevate\%flavor%"
if NOT EXIST %elevatebuilddir% (
	echo Elevate build directory not found at %elevatebuilddir%
	exit /B 1
)

set logonbuilddir="%cppbuilddir%\logon\%flavor%"
if NOT EXIST %logonbuilddir% (
	echo Logon build directory not found at %logonbuilddir%
	exit /B 1
)

set clibuilddir="%cppbuilddir%\cli\%flavor%"
if NOT EXIST %clibuilddir% (
	echo CLI build directory not found at %clibuilddir%
	exit /B 1
)

set wixdir=%builddir%\wix
REM Delete directory generated by previous invocation
IF EXIST "%wixdir%" (
	echo Removing existing wix directory "%wixdir%"
	rmdir /S /Q "%wixdir%"
	timeout /T 2
	IF EXIST "%wixdir%" (
		echo Failed to remove existing wix directory "%wixdir%"
		exit /B 1
	)
)
echo Creating output directories
mkdir "%wixdir%"
set artifactsdir=%wixdir%\artifacts
set cmake_installdir=%wixdir%\install
mkdir "%artifactsdir%"

if /I "%flavor%"=="Debug" (
	REM Find required ucrtbased.dll in "whichever SDK directory is present", using a routine adapted from https://stackoverflow.com/a/13876918
	for /D %%a in ("C:\Program Files (x86)\Windows Kits\10\bin\*") do (
		for /D %%b in ("%%a\*") do (
			if "%%~nxb"=="x64" (
				if EXIST "%%b\ucrt\ucrtbased.dll" set ucrtbased_dll="%%b\ucrt\ucrtbased.dll"
			)
		)
	)
	if not defined ucrtbased_dll (
		echo ucrtbased.dll not found.
		exit /B 1
	) else (
		echo Copying DLL for debug executable
		copy %ucrtbased_dll% "%artifactsdir%\"
	)
)

if [%windeployqt%] == [] (
  REM Default to windeployqt in PATH
  SET windeployqt=windeployqt
)

echo Copying build output
cmake --install %builddir% --prefix %cmake_installdir% --component pepAssessor || exit /B 1
cmake --install %builddir% --prefix %cmake_installdir% --component pepElevate || exit /B 1
cmake --install %builddir% --prefix %cmake_installdir% --component pepLogon || exit /B 1
cmake --install %builddir% --prefix %cmake_installdir% --component pepcli || exit /B 1
move "%cmake_installdir%\bin\*" "%artifactsdir%"

echo Copying QT dependencies for pepAssessor
REM We've already invoked windeployqt during the build, but those dependencies were left behind in the %builddir%
%windeployqt% --dir "%artifactsdir%" "%assessorbuilddir%\pepAssessor.exe" || exit /B 1

echo Harvesting dependencies into WiX source
if "%WIX%" == "" (
	echo The WIX environment variable is not set. Please ensure that WiX is properly installed.
	exit /B 1
)
"%WIX%\bin\heat.exe" dir "%artifactsdir%" -nologo -ag -sfrag -srd -sreg -template fragment -cg binaryDependencies -dr INSTALLDIR -var var.ArtifactsDir -t "%OwnDir%\RemovePepExecutables.xslt" -out "%wixdir%\binaryDependencies.wxs" || exit /B 1

echo Copying installer support files
copy "%OwnDir%\PepShell.ps1" "%artifactsdir%\" || exit /B 1
copy "%builddir%\autocomplete\autocomplete_pep.ps1" "%artifactsdir%\" || exit /B 1
copy "%OwnDir%\DownloadAll.ps1" "%artifactsdir%\" || exit /B 1

echo Compiling WiX sources
"%WIX%\bin\candle.exe" -nologo -dArtifactsDir="%artifactsdir%" -arch x64 -out "%wixdir%\binaryDependencies.wixobj" "%wixdir%\binaryDependencies.wxs" || exit /B 1
"%WIX%\bin\candle.exe" -nologo -dArtifactsDir="%artifactsdir%" -arch x64 -ext WixUtilExtension -out "%wixdir%\binaries.wixobj" "%OwnDir%\binaries.wxs" || exit /B 1

echo Archiving objects into WiX library
"%WIX%\bin\lit.exe" -nologo -bf -out "%wixdir%\pepBinaries.wixlib" "%wixdir%\binaryDependencies.wixobj" "%wixdir%\binaries.wixobj" || exit /B 1

echo Successfully produced .wixlib file at "%wixdir%"
