@echo off

set OwnDir=%~dp0

set builddir=%1
set wixlibpath=%2
set configdir=%3
set environmentname=%4
set pipelinenumber=%5
set jobnumber=%6
REM TODO support installer build for local infra (with the project configuration it's based on)

if "%jobnumber%" == "" (
	echo Usage: %0 ^<buildDir^> ^<wixLibPath^> ^<configDir^> ^<environment^> ^<pipelineNumber^> ^<jobNumber^>
	echo E.g. : %0 "C:\proj\bin" "C:\pepBinaries.wixlib" C:\proj\config acc 12345 876543
	exit /B 1
)

echo Creating build directory
mkdir "%builddir%"
REM Get absolute path: https://stackoverflow.com/a/4488734
pushd %builddir%
set builddir=%CD%
popd
pushd %configdir%
set configdir=%CD%
popd

set infradir=%configdir%\%environmentname%
set projectdir=%infradir%\project

REM Read file contents into variable: https://stackoverflow.com/a/3069068
echo Reading project caption file
set captionfile=%projectdir%\caption.txt
if not exist %captionfile% (
	echo Cannot find project caption file at %captionfile%
	exit /B 1
)
set /p projectcaption=<%captionfile%

set wixdir=%builddir%\wix
REM Delete directory generated by previous invocation
IF EXIST "%wixdir%" (
	echo Removing existing wix directory "%wixdir%"
	rmdir /S /Q "%wixdir%"
	timeout /T 2
	IF EXIST "%wixdir%" (
		echo Failed to remove existing wix directory "%wixdir%"
		exit /B 1
	)
)
echo Creating output directories
mkdir "%wixdir%"
set artifactsdir=%wixdir%\artifacts
mkdir "%artifactsdir%"

echo Creating Gitlab version JSON
REM Store command output into a variable: https://stackoverflow.com/a/2340018
for /f "tokens=*" %%i in ('%OwnDir%\..\scripts\windows-to-sh-path.bat %infradir%') do set unixinfradir=%%i
for /f "tokens=*" %%i in ('%OwnDir%\..\scripts\windows-to-sh-path.bat %projectdir%') do set unixprojectdir=%%i

pushd %OwnDir%
REM Specify %pipelinenumber% and %jobnumber% to ensure that configVersion.json has the same version as the installer
powershell -ExecutionPolicy Bypass -File "%OwnDir%\..\scripts\invoke-sh.ps1" "../scripts/createConfigVersionJson.sh" "%unixinfradir%" "%unixprojectdir%" "%pipelinenumber%" "%jobnumber%" > "%artifactsdir%\configVersion.json" || exit /B 1
popd
if not exist "%artifactsdir%\configVersion.json" (
  echo Config version file was not created at %artifactsdir%\configVersion.json 2>&1
  exit /B 1
)

for /F "tokens=*" %%g in ('jq .majorVersion "%artifactsdir%\configVersion.json"') do (set majorVersion=%%g)
for /F "tokens=*" %%g in ('jq .minorVersion "%artifactsdir%\configVersion.json"') do (set minorVersion=%%g)


echo Copying infrastructure configuration files
xcopy "%infradir%\rootCA.cert" "%artifactsdir%\" || exit /B 1
xcopy "%infradir%\ShadowAdministration.pub" "%artifactsdir%\" || exit /B 1
xcopy "%infradir%\client\ClientConfig.json" "%artifactsdir%\" || exit /B 1

echo Copying project configuration files
copy "%projectdir%\client\*" "%artifactsdir%\"

echo Harvesting project configuration files into WiX source
"%WIX%\bin\heat.exe" dir "%artifactsdir%" -nologo -ag -sfrag -srd -sreg -template fragment -cg configFiles -dr INSTALLDIR -var var.ArtifactsDir -out "%wixdir%\configFiles.wxs" || exit /B 1

echo Compiling WiX sources
"%WIX%\bin\candle.exe" -nologo -dArtifactsDir="%artifactsdir%" -arch x64 -out "%wixdir%\configFiles.wixobj" "%wixdir%\configFiles.wxs" || exit /B 1
"%WIX%\bin\candle.exe" -nologo -dMajorVersion="%majorVersion%" -dMinorVersion="%minorVersion%" -dPipelineNumber="%pipelinenumber%" -dJobNumber=%jobnumber% -dProjectCaption="%projectcaption%" -dEnvironmentName="%environmentname%" -dInfraWxiFile="%infradir%\WindowsInstaller.wxi" -arch x64 -ext WixUtilExtension -out "%wixdir%\main.wixobj" "%OwnDir%\pep.wxs" || exit /B 1

REM Work around "light.exe : error LGHT0001 : A required privilege is not held by the client" when invoked from an elevated context.
REM See https://gitlab.pep.cs.ru.nl/pep/core/-/issues/1272#note_16345
REM The "PEP_PSEXEC64_EXE" variable is set by the "windows-ci-runner.bat", which also ensures that the utility is installed.
if not "%PEP_PSEXEC64_EXE%" == "" (
  echo Manipulating linker's user context with %PEP_PSEXEC64_EXE%.
  set MANIPULATE_UAC=%PEP_PSEXEC64_EXE% -accepteula -h -w "%CD%"
)

echo Linking MSI installer
REM Suppress "warning LGHT1076 : ICE69: Mismatched component reference", which is issued because
REM shortcuts are in other components than the files targeted by those shortcuts.
REM See https://github.com/wixtoolset/issues/issues/5938 and/or http://lists.wixtoolset.org/pipermail/wix-users-wixtoolset.org/2020-March/008799.html
set IGNORE_CROSS_COMPONENT_REFS=-sw1076

%MANIPULATE_UAC% "%WIX%\bin\light.exe" -nologo %IGNORE_CROSS_COMPONENT_REFS% -ext WixUIExtension -ext WixUtilExtension -cultures:nl-NL -out "%wixdir%\pep.msi" "%wixdir%\main.wixobj" "%wixdir%\configFiles.wixobj" "%wixLibPath%" -loc "%OwnDir%\nl-NL.wxl" -loc "%OwnDir%\en-US.wxl" || exit /B 1

echo Successfully produced MSI installer at "%wixdir%\pep.msi"
